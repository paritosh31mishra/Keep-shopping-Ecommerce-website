[{"Z:\\Paritosh\\workspaces\\UI developer\\LIVE-PROJECT\\shopping\\src\\index.js":"1","Z:\\Paritosh\\workspaces\\UI developer\\LIVE-PROJECT\\shopping\\src\\App.js":"2","Z:\\Paritosh\\workspaces\\UI developer\\LIVE-PROJECT\\shopping\\src\\reportWebVitals.js":"3","Z:\\Paritosh\\workspaces\\UI developer\\LIVE-PROJECT\\shopping\\src\\user\\userapp.js":"4","Z:\\Paritosh\\workspaces\\UI developer\\LIVE-PROJECT\\shopping\\src\\seller\\sellerapp.js":"5","Z:\\Paritosh\\workspaces\\UI developer\\LIVE-PROJECT\\shopping\\src\\user\\userheader.js":"6","Z:\\Paritosh\\workspaces\\UI developer\\LIVE-PROJECT\\shopping\\src\\user\\home.js":"7","Z:\\Paritosh\\workspaces\\UI developer\\LIVE-PROJECT\\shopping\\src\\user\\cart.js":"8","Z:\\Paritosh\\workspaces\\UI developer\\LIVE-PROJECT\\shopping\\src\\user\\register.js":"9","Z:\\Paritosh\\workspaces\\UI developer\\LIVE-PROJECT\\shopping\\src\\user\\login.js":"10","Z:\\Paritosh\\workspaces\\UI developer\\LIVE-PROJECT\\shopping\\src\\seller\\sellerheader.js":"11","Z:\\Paritosh\\workspaces\\UI developer\\LIVE-PROJECT\\shopping\\src\\seller\\dashboard.js":"12","Z:\\Paritosh\\workspaces\\UI developer\\LIVE-PROJECT\\shopping\\src\\seller\\order.js":"13","Z:\\Paritosh\\workspaces\\UI developer\\LIVE-PROJECT\\shopping\\src\\seller\\productlist.js":"14","Z:\\Paritosh\\workspaces\\UI developer\\LIVE-PROJECT\\shopping\\src\\seller\\newproduct.js":"15"},{"size":630,"mtime":1695634950375,"results":"16","hashOfConfig":"17"},{"size":269,"mtime":1695740425473,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1695633829984,"results":"19","hashOfConfig":"17"},{"size":667,"mtime":1695729492833,"results":"20","hashOfConfig":"17"},{"size":738,"mtime":1695820733551,"results":"21","hashOfConfig":"17"},{"size":1811,"mtime":1699880166995,"results":"22","hashOfConfig":"17"},{"size":4817,"mtime":1699940244177,"results":"23","hashOfConfig":"17"},{"size":10089,"mtime":1696372420242,"results":"24","hashOfConfig":"17"},{"size":4147,"mtime":1695736098125,"results":"25","hashOfConfig":"17"},{"size":1965,"mtime":1695742209479,"results":"26","hashOfConfig":"17"},{"size":1405,"mtime":1695759037007,"results":"27","hashOfConfig":"17"},{"size":1894,"mtime":1695833222137,"results":"28","hashOfConfig":"17"},{"size":3621,"mtime":1696365186555,"results":"29","hashOfConfig":"17"},{"size":3134,"mtime":1699940198673,"results":"30","hashOfConfig":"17"},{"size":3170,"mtime":1695830538911,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1dyvo6b",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},"Z:\\Paritosh\\workspaces\\UI developer\\LIVE-PROJECT\\shopping\\src\\index.js",[],[],"Z:\\Paritosh\\workspaces\\UI developer\\LIVE-PROJECT\\shopping\\src\\App.js",[],[],"Z:\\Paritosh\\workspaces\\UI developer\\LIVE-PROJECT\\shopping\\src\\reportWebVitals.js",[],[],"Z:\\Paritosh\\workspaces\\UI developer\\LIVE-PROJECT\\shopping\\src\\user\\userapp.js",[],[],"Z:\\Paritosh\\workspaces\\UI developer\\LIVE-PROJECT\\shopping\\src\\seller\\sellerapp.js",[],[],"Z:\\Paritosh\\workspaces\\UI developer\\LIVE-PROJECT\\shopping\\src\\user\\userheader.js",["82"],[],"Z:\\Paritosh\\workspaces\\UI developer\\LIVE-PROJECT\\shopping\\src\\user\\home.js",["83","84","85"],[],"Z:\\Paritosh\\workspaces\\UI developer\\LIVE-PROJECT\\shopping\\src\\user\\cart.js",["86","87","88","89","90","91","92","93","94","95","96","97","98"],[],"import {useState, useEffect} from \"react\";\r\nimport { json } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\n\r\n\r\n\r\nconst Mycart = () => {\r\n    let [allproduct, updateproduct] = useState([]);\r\n  \r\n    const getProduct = () => {\r\n      fetch(\"http://localhost:1234/cartlist\")\r\n        .then((response) => response.json())\r\n        .then((productarray) => {\r\n          updateproduct(productarray);\r\n        });\r\n    };\r\n  \r\n    useEffect(() => {\r\n      getProduct();\r\n    }, [1]);\r\n\r\n    const changeQty = async(product, action) =>{\r\n        let flag = 0;\r\n          if(action == \"A\")\r\n          {\r\n           \r\n            if(product.qty+1 <= product[\"totalqty\"])\r\n            {\r\n                flag = 1;\r\n                product[\"qty\"] = product.qty+1;\r\n            }\r\n            else\r\n            alert(\"Availability:   \"+ product[\"totalqty\"]);\r\n          }\r\n          if(action == \"B\")\r\n          {\r\n              flag = 1;\r\n              product[\"qty\"] = product.qty-1;\r\n          }\r\n          \r\n        \r\n            if(product.qty > 0 && flag == 1)\r\n            {\r\n                let url = \" http://localhost:1234/cartlist/\"+ product.id;\r\n                let postdata = {\r\n                   headers: {\"Content-type\" : \"application/json\"},\r\n                    method: \"PUT\",\r\n                    body: JSON.stringify(product)\r\n                }\r\n    \r\n                await fetch(url, postdata)\r\n                .then(response => response.json)\r\n                .then(productdata =>{\r\n                    swal(product.name, \"Quantity updated in Cart !\", \"success\");\r\n                    getProduct(); //reload the list with updated value\r\n                })\r\n                .catch(error =>{\r\n                    swal(\"Error\", \"while Updating quantity\", \"error\");\r\n                })\r\n            }\r\n            if(product.qty <= 0){\r\n                delitem(product.id, product.name)\r\n            }\r\n           \r\n    }\r\n\r\n    const delitem = async (id, name) =>{\r\n      let url = \" http://localhost:1234/cartlist/\"+ id;\r\n      let postdata = { method: \"DELETE\"};\r\n     await fetch(url,postdata)\r\n      .then(response => response.json)\r\n      .then(data => {\r\n        swal(name+ \"\", \"Deleted Successfully !!\", \"success\");\r\n        getProduct(); // reload the list with updated value\r\n      })\r\n    }\r\n\r\n     let total = 0;\r\n     let[fullname, pickname] = useState(\"\");\r\n     let[mobile, pickmobile] = useState(\"\");\r\n     let[email, pickemail] = useState(\"\");\r\n     let[address, pickaddress] = useState(\"\");\r\n\r\n     // for validation \r\n     let [nameerror, updateNameerror] = useState(\"\");\r\n     let [mobileerror, updateMobileerror] = useState(\"\");\r\n     let [emailerror, updateEmailerror] = useState(\"\");\r\n     let [addresserror, updateAddresserror] = useState(\"\");\r\n\r\n     const save = () =>{\r\n        let formstatus = true;\r\n       \r\n        // name check\r\n             if(fullname ==  \"\")\r\n             {\r\n                updateNameerror(\"Invalid Name !\");\r\n                formstatus = false;\r\n             }\r\n              else {\r\n                updateNameerror(\"\");\r\n              }\r\n\r\n              //mobile no check\r\n              var mpattern = /^[0]?[6789]\\d{9}$/\r\n              if( ! mpattern.test(mobile)) // if not matching\r\n             {\r\n                updateMobileerror(\"Invalid mobile no !\");\r\n                formstatus = false;\r\n             }\r\n              else {\r\n                updateMobileerror(\"\");\r\n              }\r\n                 \r\n       // email check\r\n       var epattern = /^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/\r\n       if( ! epattern.test(email) )\r\n       {\r\n          updateEmailerror(\"Invalid Email id !\");\r\n          formstatus = false;\r\n       }\r\n        else {\r\n          updateEmailerror(\"\");\r\n        }\r\n\r\n\r\n        // address check\r\n       if(address  == \"\")\r\n       {\r\n          updateAddresserror(\"Invalid  Delivery Address !\");\r\n          formstatus = false;\r\n       }\r\n        else {\r\n          updateAddresserror(\"\");\r\n        }\r\n\r\n        // cartlist length check\r\n          if(allproduct.length == 0){\r\n            formstatus = false;\r\n          }\r\n\r\n              if(formstatus === true){\r\n                let orderdata = {\r\n                    customername : fullname,\r\n                    mobile: mobile,\r\n                    email: email,\r\n                    address: address,\r\n                    itemlist: allproduct\r\n                }\r\n\r\n                let url = \" http://localhost:1234/orderlist/\";\r\n                let postdata = {\r\n                headers: {'Content-type': 'application/json'},\r\n                    method: \"POST\",\r\n                    body: JSON.stringify(orderdata)\r\n                }\r\n\r\n                fetch(url, postdata)\r\n                .then(response => response.json())\r\n                .then(responsedata => {\r\n                    swal(\"Order Id:\" + responsedata.id, \"Received Successfully !!\", \"success\");\r\n                    pickname(\"\");\r\n                    pickmobile(\"\");\r\n                    pickemail(\"\");\r\n                    pickaddress(\"\");\r\n                    updateproduct([]);\r\n                    \r\n                })\r\n        }\r\n        else{\r\n            swal(\"Input Error\", \"Please Enter Customer Details\", \"warning\");\r\n        }\r\n     }\r\n\r\n    return(\r\n        <div className=\"container mt-4\">\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-4 pt-5\">\r\n                    <div className=\"card border-0 shadow-lg\">\r\n                   <div className=\"card-header\">Enter Customer Details</div> \r\n                   <div className=\"card-body\">\r\n                    <div className=\"mb-3\">\r\n                        <label>Customer Name</label>\r\n                        <input type=\"text\" className=\"form-control\" onChange={obj=> pickname(obj.target.value)} value={fullname} />\r\n                        <small className=\"text-danger\"> {nameerror} </small>\r\n                        </div>\r\n\r\n                        <div className=\"mb-3\">\r\n                        <label>Mobile number</label>\r\n                        <input type=\"number\" className=\"form-control\" value={mobile} onChange={obj=> pickmobile(obj.target.value)}/>\r\n                        <small className=\"text-danger\"> {mobileerror} </small>\r\n                        </div>\r\n                      \r\n                        <div className=\"mb-3\">\r\n                        <label>Email-Id</label>\r\n                        <input type=\"email\" className=\"form-control\" value={email} onChange={obj=> pickemail(obj.target.value)}/>\r\n                        <small className=\"text-danger\"> {emailerror} </small>\r\n                        </div>\r\n\r\n                        <div className=\"mb-3\">\r\n                        <label>Delivery Address</label>\r\n                       <textarea className=\"form-control\" value={address} onChange={obj => pickaddress(obj.target.value)}> </textarea>\r\n                       <small className=\"text-danger\"> {addresserror} </small>\r\n                       \r\n                    </div>\r\n                   </div>\r\n                   <div className=\"card-footer text-center\">\r\n                    <button className=\"btn btn-danger\" onClick={save}>Place Order</button>\r\n                   </div>\r\n                   </div>\r\n                </div>\r\n                <div className=\"col-lg-8\">\r\n                    <h3 className=\"text-center\">\r\n                        Items in Cart : {allproduct.length}\r\n                    </h3>\r\n\r\n                    <table className=\"table table-bordered shadow\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Product</th>\r\n                                <th>Price</th>\r\n                                <th>Quantity</th>\r\n                                <th>Total</th>\r\n                                <th>Photo</th>\r\n                                <th className=\"text-center\">Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                 allproduct.map((product, index)=>{\r\n                                    total = total + product.price * product.qty;\r\n                                   return(\r\n                                    <tr key={index}>\r\n                                        <td>{product.name} </td>\r\n                                        <td>{product.price}</td>\r\n                                        <td className=\"input-group\"> \r\n                                        <button className=\"btn btn-info btn-sm\" onClick={changeQty.bind(this, product, \"A\")}> <i className=\"fa fa-plus\"></i></button>\r\n                                        <input type=\"text\" className=\"form-control\" value={product.qty} readOnly size= \"1\"/>\r\n                                        <button className=\"btn btn-warning  btn-sm\" onClick={changeQty.bind(this, product, \"B\")}><i className=\"fa fa-minus\" ></i></button>\r\n                                         </td>\r\n                                        <td>{ product.qty * product.price}</td>\r\n                                        <td><img src={product.photo}  height=\"50\" width=\"50\" /></td>\r\n\r\n                                        <td className=\"text-center\">\r\n                                            <i className=\"fa fa-2x fa-trash fa-lg text-danger\" onClick={delitem.bind(this, product.id, product.name)}></i>\r\n                                        </td>\r\n\r\n                                    </tr>\r\n                                 \r\n                                   )\r\n                                 })\r\n                                }\r\n                                 <tr>\r\n                                 <td colspan=\"6\" className=\"text-center text-danger fs-3\">Total Amount - {total} </td>\r\n                                 </tr>\r\n                           \r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n  \r\n}\r\n\r\nexport default Mycart;","Z:\\Paritosh\\workspaces\\UI developer\\LIVE-PROJECT\\shopping\\src\\user\\register.js",[],[],"Z:\\Paritosh\\workspaces\\UI developer\\LIVE-PROJECT\\shopping\\src\\user\\login.js",["99"],[],"import swal from \"sweetalert\";\r\nimport {useState} from 'react';\r\n\r\nconst Mylogin = () =>{\r\n  let[useremail, pickemail] = useState(\"\");\r\n  let[password, pickpassword] = useState(\"\");\r\n\r\n  const login = () =>{\r\n     let url = \"http://localhost:1234/account?semail=\"+useremail+\"&spassword=\"+password;\r\n     fetch(url)\r\n     .then(response => response.json())\r\n     .then(userinfo => {\r\n        if(userinfo.length == 0)\r\n        swal(\"Error\", \"invalid Or Not Exists\", \"warning\");\r\n    else {\r\n        localStorage.setItem (\"sellerid\", userinfo[0].id);\r\n        // here we store login details in the chrome local storage so that we can login\r\n        localStorage.setItem(\"fullname\", userinfo[0].sname);\r\n        window.location.href=\"http://localhost:3000/#/\"\r\n      window.location.reload();// Reload the page(app.js) after login is success\r\n    }\r\n     })\r\n\r\n  }\r\n  //\r\n  return(\r\n     <div className=\"container mt-5\">\r\n        <div className=\"row\">\r\n            <div className=\"col-lg-3\"></div>\r\n            <div className=\"col-lg-6\">\r\n                <div className=\"border p-4 rounded shadow\">\r\n                    <h3 className=\"text-center\">  Seller Login </h3>\r\n                    <div className=\"mb-4\">\r\n                        <label>Email id</label>\r\n                        <input type=\"email\"  className=\"form-control\" value={useremail} onChange={obj=> pickemail(obj.target.value)}/> \r\n                    </div>\r\n\r\n                    <div className=\"mb-3\">\r\n                        <label>Password</label>\r\n                        <input type=\"password\" className=\"form-control\" value={password} onChange={obj=> pickpassword(obj.target.value)}/>\r\n                    </div>\r\n\r\n                    <div className=\"text-center\">\r\n                        <button className=\"btn btn-danger\" onClick={login}>Login</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n     </div>\r\n  )\r\n}\r\n\r\nexport default Mylogin;","Z:\\Paritosh\\workspaces\\UI developer\\LIVE-PROJECT\\shopping\\src\\seller\\sellerheader.js",[],[],"Z:\\Paritosh\\workspaces\\UI developer\\LIVE-PROJECT\\shopping\\src\\seller\\dashboard.js",["100"],[],"import {useState, useEffect} from \"react\";\r\n\r\nconst Mydashboard = () =>{\r\n    let[allproduct, updateProduct] = useState([]);\r\n\r\n    const getProduct = () =>{\r\n        let url = \"http://localhost:1234/productlist?sellerid=\"+localStorage.getItem(\"sellerid\");\r\n       \r\n        fetch(url)\r\n        .then(response=>response.json())\r\n        .then(productarray => {\r\n         \r\n            updateProduct(productarray.reverse());\r\n        })\r\n\r\n    }\r\n\r\n    let [orderlist, updateOrder] = useState([]);\r\n    const getOrder = () =>{\r\n        \r\n        fetch(\"http://localhost:1234/orderlist\") \r\n        .then(response => response.json())\r\n        .then(data => {\r\n            updateOrder(data.reverse());\r\n            // recent order will come at top\r\n        })\r\n    }\r\n\r\n   useEffect(()=>{\r\n    getProduct();\r\n    getOrder();\r\n   }, [1]);\r\n   \r\n    return(\r\n        <div className=\"container mt-5\">\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-12\">\r\n                    <h1 className=\"text-center\"> Dashboard </h1>\r\n                    <p className=\"text-center\">\r\n                        Hi, {localStorage.getItem(\"fullname\")} - How Are You Today ?\r\n                    </p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row mt-4 text-center\">\r\n                <div className=\"col-lg-2\"></div>\r\n\r\n                <div className=\"col-lg-4\">\r\n                    <i className=\"fa fa-database fa-5x text-info\"></i>\r\n                    <h3> Items in Stock-{allproduct.length} </h3>\r\n                </div>\r\n\r\n                <div className=\"col-lg-4\">\r\n                <i className=\"fa fa-phone fa-5x text-success\"></i>\r\n                    <h3> Order Received-{orderlist.length} </h3>\r\n                </div>\r\n\r\n                <div className=\"col-lg-2\"></div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Mydashboard;","Z:\\Paritosh\\workspaces\\UI developer\\LIVE-PROJECT\\shopping\\src\\seller\\order.js",["101","102","103","104","105","106","107","108"],[],"import {useState, useEffect} from \"react\";\r\n \r\nconst Myorder = () =>{\r\n   \r\n    let [orderlist, updateOrder] = useState([]);\r\n    const getOrder = () =>{\r\n        fetch(\"http://localhost:1234/orderlist\")\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            updateOrder(data.reverse());\r\n            // recent order will come at top\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        getOrder();\r\n    }, [1])\r\n\r\n  return(\r\n    <div className=\"container mt-5\">\r\n        <div className=\"row\">\r\n            <div className=\"col-lg-12 text-center mb-4\">\r\n                <h1 className=\"text-info\" id=\"orderlist\">\r\n                      \r\n                 </h1>\r\n            </div>\r\n        </div>\r\n\r\n        {\r\n         \r\n             orderlist.map((order,index) =>{\r\n                let flag = 0;\r\n                order.itemlist.map((it, index) =>{\r\n                     if(localStorage.getItem(\"sellerid\") == it.sellerid)\r\n                        flag = 1;\r\n                    \r\n                })\r\n                \r\n               \r\n                if(flag == 1)\r\n                {\r\n                return(\r\n                   \r\n                    <div className=\"row mb-5 p-4 shadow-lg\" key={index}>\r\n                        <div className=\"col-lg-3 text-primary\">  Customer Name: <b>{order.customername}</b> </div> \r\n                        <div className=\"col-lg-3 text-danger\">Mobile no. : {order.mobile} \r\n                         </div> \r\n                        <div className=\"col-lg-3 text-success\">E-mail: {order.email} </div> \r\n                         <div className=\"col-lg-3 text-secondary\">Deliver To : {order.address} </div>    \r\n                        \r\n                        <div className=\"col-lg-12 mt-4\"> \r\n                           <table className=\"table table-bordered table-hover\">\r\n                               <thead>\r\n                                <tr>\r\n                                 <th>Product</th>\r\n                                 <th>Quantity</th>\r\n                                 <th>Price</th>\r\n                                 <th>Total</th>\r\n                                 <th>Photo</th>\r\n                                 </tr>\r\n                               </thead>\r\n     \r\n                               <tbody>\r\n                                {\r\n                                    order.itemlist.map((item, index1) =>{\r\n                                        if(localStorage.getItem(\"sellerid\") == item.sellerid)\r\n                                    {\r\n                                        return(\r\n                                            <tr key={index1}>\r\n                                            <td> {item.name} </td>\r\n                                            <td> {item.qty} </td>\r\n                                            <td> {item.price} </td>\r\n                                            <td> {item.qty * item.price} </td>\r\n                                            <td> \r\n                                              <img src={item.photo}  height=\"30\" width=\"50\"/>     \r\n                                            </td>\r\n                                            </tr>\r\n                                        )\r\n                                        } \r\n                                    })\r\n                                }\r\n                               </tbody>\r\n                           </table>\r\n                        </div>\r\n                     </div>\r\n\r\n                    \r\n                )\r\n            }\r\n             })\r\n        }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Myorder;","Z:\\Paritosh\\workspaces\\UI developer\\LIVE-PROJECT\\shopping\\src\\seller\\productlist.js",["109","110"],[],"Z:\\Paritosh\\workspaces\\UI developer\\LIVE-PROJECT\\shopping\\src\\seller\\newproduct.js",["111"],[],"import {useState} from \"react\";\r\nimport swal from 'sweetalert';\r\nimport { json } from \"react-router-dom\";\r\n\r\nconst NewProduct = () =>{\r\n    let [name, pickname] = useState(\"\");\r\n    let [price, pickprice] = useState(\"\");\r\n    let [details, pickdetails] = useState(\"\");\r\n    let [photo, pickphoto] = useState(\"\");\r\n    let [totalqty, pickqty] = useState(\"\");\r\n\r\n    const saveitem = () =>{\r\n        let temp = localStorage.getItem(\"sellerid\");\r\n       \r\n       let newitem =\r\n        {\r\n            name: name,\r\n            price: price,\r\n            photo: photo,\r\n            details: details,\r\n            sellerid: temp,\r\n            totalqty: totalqty\r\n        }\r\n\r\n        let postdata = {\r\n            headers: {'Content-type': 'application/json'},\r\n            method: \"POST\",\r\n            body: JSON.stringify(newitem)\r\n        }\r\n\r\n        let url = \"http://localhost:1234/productlist\";\r\n        fetch(url, postdata)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            swal(name+ \" Added Successfully !!\", \"\", \"success\");\r\n            window.location.href = \"http://localhost:3000/#/productlist\";\r\n        })\r\n    }\r\n\r\n    return(\r\n    <div className=\"container  mt-4 p-4\">\r\n        <div className=\"row\">\r\n            <h3 className=\"text-center mb-4\"> New Product </h3>\r\n            <div className=\"col-lg-3\"></div>\r\n\r\n            <div className=\"col-lg-6 shadow p-4 rounded\">\r\n                <h3 className=\" text-success mb-3 text-center\">Product Details</h3>\r\n                <div className=\"mb-3\">\r\n                    <label><b>Name</b></label>\r\n                    <input type=\"text\" className=\"form-control\"  placeholder=\"Enter Product Name\" value={name} onChange={obj=> pickname(obj.target.value)}/>\r\n                </div>\r\n \r\n               <div className=\"mb-3\">\r\n                     <label><b>Price</b></label>\r\n                     <input type=\"number\"  className=\"form-control\" placeholder=\"Enter Product price\" value={price} onChange={obj=> pickprice(obj.target.value)}/>\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                     <label><b>Quantity</b></label>\r\n                     <input type=\"number\"  className=\"form-control\" placeholder=\"Enter product Quantity\" value={totalqty} onChange={obj=> pickqty(obj.target.value)}/>\r\n                </div>\r\n\r\n               <div className=\"mb-3\">\r\n                   <label><b>Photo</b></label>\r\n                   <input type=\"text\" className=\"form-control\"  placeholder=\"Enter image url\" value={photo} onChange={obj=> pickphoto(obj.target.value)}/>\r\n               </div>\r\n\r\n                <div className=\"mb-3\">\r\n                   <label><b>Details</b></label>\r\n                   <textarea className=\"form-control\" value={details} onChange={obj=> pickdetails(obj.target.value)}>    </textarea>\r\n                </div>\r\n\r\n                <div className=\"mb-3 text-center\">\r\n                   <button className=\"btn btn-danger \" onClick={saveitem}>Save</button>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-lg-3\"></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewProduct;",{"ruleId":"112","severity":1,"message":"113","line":6,"column":11,"nodeType":"114","endLine":6,"endColumn":59},{"ruleId":"115","severity":1,"message":"116","line":17,"column":7,"nodeType":"117","endLine":17,"endColumn":8},{"ruleId":"118","severity":1,"message":"119","line":65,"column":76,"nodeType":"120","messageId":"121","endLine":65,"endColumn":78},{"ruleId":"122","severity":1,"message":"123","line":74,"column":19,"nodeType":"114","endLine":79,"endColumn":21},{"ruleId":"124","severity":1,"message":"125","line":2,"column":10,"nodeType":"126","messageId":"127","endLine":2,"endColumn":14},{"ruleId":"115","severity":1,"message":"116","line":20,"column":9,"nodeType":"117","endLine":20,"endColumn":10},{"ruleId":"128","severity":1,"message":"129","line":24,"column":21,"nodeType":"130","messageId":"131","endLine":24,"endColumn":23},{"ruleId":"128","severity":1,"message":"129","line":35,"column":21,"nodeType":"130","messageId":"131","endLine":35,"endColumn":23},{"ruleId":"128","severity":1,"message":"129","line":42,"column":40,"nodeType":"130","messageId":"131","endLine":42,"endColumn":42},{"ruleId":"128","severity":1,"message":"129","line":94,"column":26,"nodeType":"130","messageId":"131","endLine":94,"endColumn":28},{"ruleId":"132","severity":1,"message":"133","line":115,"column":37,"nodeType":"117","messageId":"134","endLine":115,"endColumn":38,"suggestions":"135"},{"ruleId":"132","severity":1,"message":"136","line":115,"column":39,"nodeType":"117","messageId":"134","endLine":115,"endColumn":40,"suggestions":"137"},{"ruleId":"132","severity":1,"message":"138","line":115,"column":44,"nodeType":"117","messageId":"134","endLine":115,"endColumn":45,"suggestions":"139"},{"ruleId":"132","severity":1,"message":"136","line":115,"column":58,"nodeType":"117","messageId":"134","endLine":115,"endColumn":59,"suggestions":"140"},{"ruleId":"128","severity":1,"message":"129","line":127,"column":20,"nodeType":"130","messageId":"131","endLine":127,"endColumn":22},{"ruleId":"128","severity":1,"message":"129","line":137,"column":32,"nodeType":"130","messageId":"131","endLine":137,"endColumn":34},{"ruleId":"122","severity":1,"message":"123","line":241,"column":45,"nodeType":"114","endLine":241,"endColumn":96},{"ruleId":"128","severity":1,"message":"129","line":13,"column":28,"nodeType":"130","messageId":"131","endLine":13,"endColumn":30},{"ruleId":"115","severity":1,"message":"116","line":32,"column":8,"nodeType":"117","endLine":32,"endColumn":9},{"ruleId":"115","severity":1,"message":"116","line":17,"column":9,"nodeType":"117","endLine":17,"endColumn":10},{"ruleId":"118","severity":1,"message":"119","line":31,"column":42,"nodeType":"120","messageId":"121","endLine":31,"endColumn":44},{"ruleId":"118","severity":1,"message":"141","line":33,"column":48,"nodeType":"120","messageId":"142","endLine":33,"endColumn":50},{"ruleId":"128","severity":1,"message":"129","line":34,"column":58,"nodeType":"130","messageId":"131","endLine":34,"endColumn":60},{"ruleId":"128","severity":1,"message":"129","line":40,"column":25,"nodeType":"130","messageId":"131","endLine":40,"endColumn":27},{"ruleId":"118","severity":1,"message":"119","line":65,"column":71,"nodeType":"120","messageId":"121","endLine":65,"endColumn":73},{"ruleId":"128","severity":1,"message":"129","line":66,"column":77,"nodeType":"130","messageId":"131","endLine":66,"endColumn":79},{"ruleId":"122","severity":1,"message":"123","line":75,"column":47,"nodeType":"114","endLine":75,"endColumn":94},{"ruleId":"115","severity":1,"message":"116","line":19,"column":8,"nodeType":"117","endLine":19,"endColumn":9},{"ruleId":"122","severity":1,"message":"123","line":63,"column":47,"nodeType":"114","endLine":63,"endColumn":94},{"ruleId":"124","severity":1,"message":"125","line":3,"column":10,"nodeType":"126","messageId":"127","endLine":3,"endColumn":14},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","The 1 literal is not a valid dependency because it never changes. You can safely remove it.","Literal","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-unused-vars","'json' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-escape","Unnecessary escape character: \\..","unnecessaryEscape",["143","144"],"Unnecessary escape character: \\-.",["145","146"],"Unnecessary escape character: \\@.",["147","148"],["149","150"],"Array.prototype.map() expects a return value from arrow function.","expectedInside",{"messageId":"151","fix":"152","desc":"153"},{"messageId":"154","fix":"155","desc":"156"},{"messageId":"151","fix":"157","desc":"153"},{"messageId":"154","fix":"158","desc":"156"},{"messageId":"151","fix":"159","desc":"153"},{"messageId":"154","fix":"160","desc":"156"},{"messageId":"151","fix":"161","desc":"153"},{"messageId":"154","fix":"162","desc":"156"},"removeEscape",{"range":"163","text":"164"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"165","text":"166"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"167","text":"164"},{"range":"168","text":"166"},{"range":"169","text":"164"},{"range":"170","text":"166"},{"range":"171","text":"164"},{"range":"172","text":"166"},[3541,3542],"",[3541,3541],"\\",[3543,3544],[3543,3543],[3548,3549],[3548,3548],[3562,3563],[3562,3562]]